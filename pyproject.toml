[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyfsr-cli"
version = "0.1.0"
description = "Command line interface for FortiSOAR API"
readme = "README.md"
authors = [
    { name = "Dylan Spille", email = "dspille@fortinet.com" }
]
license = { text = "MIT" }
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "click>=8.0.0",
    "pyfsr>=0.2.1",
    "rich>=10.0.0",
    "pyyaml>=6.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "click>=8.0.0", # Add core dependencies needed for testing
    "pyfsr>=0.2.1",
    "rich>=10.0.0",
    "pyyaml>=6.0.0",
]
doc = [
    "sphinx>=8.1.3",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.25.2",
    "sphinx-autoapi>=3.0.0",
    "pydata-sphinx-theme",
    "sphinx-click>=6.0.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "integration: marks tests that require a real FortiSOAR instance",
]
addopts = "-ra -q"

[tool.coverage.run]
source = ["pyfsr_cli"]
omit = [
    "tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
]

#docs = [
#    "mkdocs>=1.4.0",
#    "mkdocs-material>=9.0.0",
#]

[project.urls]
Homepage = "https://github.com/ftnt-dspille/pyfsr-cli"
Documentation = "https://ftnt-dspille.github.io/pyfsr-cli"
Repository = "https://github.com/ftnt-dspille/pyfsr-cli.git"
Issues = "https://github.com/ftnt-dspille/pyfsr-cli/issues"

[project.scripts]
pyfsr = "pyfsr_cli.cli:cli"

[tool.hatch.build.targets.wheel]
packages = ["src/pyfsr_cli"]